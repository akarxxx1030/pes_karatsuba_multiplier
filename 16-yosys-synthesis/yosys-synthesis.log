
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.34 (git sha1 4a1b5599258, clang++ 11.1.0 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
Reading SCL library '/root/.volare/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib' as a blackboxâ¦

1. Executing Liberty frontend: /root/.volare/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: ./spm.v
Parsing SystemVerilog input from `./spm.v' to AST representation.
Generating RTLIL representation for module `\spm'.
Successfully finished Verilog frontend.

3. Generating Graphviz representation of design.
Writing dot description to `/content/openlane_run/16-yosys-synthesis/hierarchy.dot'.
Dumping module spm to page 1.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Analyzing design hierarchy..
Top module:  \spm

4.2. Analyzing design hierarchy..
Top module:  \spm
Removed 0 unused modules.
Renaming module spm to spm.

5. Executing HIERARCHY pass (managing design hierarchy).

5.1. Analyzing design hierarchy..
Top module:  \spm

5.2. Analyzing design hierarchy..
Top module:  \spm
Removed 0 unused modules.

6. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

9. Executing PROC_INIT pass (extract init attributes).

10. Executing PROC_ARST pass (detect async resets in processes).

11. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

12. Executing PROC_MUX pass (convert decision trees to multiplexers).

13. Executing PROC_DLATCH pass (convert process syncs to latches).

14. Executing PROC_DFF pass (convert process syncs to FFs).

15. Executing PROC_MEMWR pass (convert process memory writes to cells).

16. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

17. Executing CHECK pass (checking for obvious problems).
Checking module spm...
Found and reported 0 problems.

18. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.
<suppressed ~4 debug messages>

19. Executing FLATTEN pass (flatten design).

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

22. Executing OPT pass (performing simple optimizations).

22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spm.
Performed a total of 0 changes.

22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

22.6. Executing OPT_DFF pass (perform DFF optimizations).

22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

22.9. Finished OPT passes. (There is nothing left to do.)

23. Executing FSM pass (extract and optimize FSM).

23.1. Executing FSM_DETECT pass (finding FSMs in design).

23.2. Executing FSM_EXTRACT pass (extracting FSM from design).

23.3. Executing FSM_OPT pass (simple optimizations of FSMs).

23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

23.5. Executing FSM_OPT pass (simple optimizations of FSMs).

23.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

23.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

23.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spm.
Performed a total of 0 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

24.6. Executing OPT_DFF pass (perform DFF optimizations).

24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

24.9. Finished OPT passes. (There is nothing left to do.)

25. Executing WREDUCE pass (reducing word size of cells).
Removed top 65 bits (of 66) from port Y of cell spm.$and$./spm.v:41$7 ($and).
Removed top 33 bits (of 66) from port Y of cell spm.$mul$./spm.v:41$9 ($mul).
Removed top 33 bits (of 66) from port Y of cell spm.$mul$./spm.v:41$10 ($mul).
Removed top 33 bits (of 66) from port A of cell spm.$add$./spm.v:41$11 ($add).
Removed top 33 bits (of 66) from port B of cell spm.$add$./spm.v:41$11 ($add).
Removed top 32 bits (of 66) from port Y of cell spm.$add$./spm.v:41$11 ($add).
Removed top 1 bits (of 66) from port A of cell spm.$add$./spm.v:41$13 ($add).
Removed top 61 bits (of 128) from port Y of cell spm.$sub$./spm.v:43$16 ($sub).
Removed top 32 bits (of 66) from wire spm.$add$./spm.v:41$11_Y.
Removed top 65 bits (of 66) from wire spm.$and$./spm.v:41$7_Y.
Removed top 33 bits (of 66) from wire spm.$mul$./spm.v:41$10_Y.
Removed top 32 bits (of 128) from wire spm.$sub$./spm.v:43$16_Y.

26. Executing PEEPOPT pass (run peephole optimizers).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

28. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module spm:
  creating $macc model for $add$./spm.v:25$3 ($add).
  creating $macc model for $add$./spm.v:26$4 ($add).
  creating $macc model for $add$./spm.v:29$5 ($add).
  creating $macc model for $add$./spm.v:41$11 ($add).
  creating $macc model for $add$./spm.v:41$13 ($add).
  creating $macc model for $add$./spm.v:41$14 ($add).
  creating $macc model for $add$./spm.v:43$18 ($add).
  creating $macc model for $add$./spm.v:43$19 ($add).
  creating $macc model for $mul$./spm.v:23$1 ($mul).
  creating $macc model for $mul$./spm.v:24$2 ($mul).
  creating $macc model for $mul$./spm.v:40$6 ($mul).
  creating $macc model for $mul$./spm.v:41$10 ($mul).
  creating $macc model for $mul$./spm.v:41$9 ($mul).
  creating $macc model for $sub$./spm.v:43$16 ($sub).
  merging $macc model for $add$./spm.v:29$5 into $sub$./spm.v:43$16.
  merging $macc model for $add$./spm.v:43$18 into $add$./spm.v:43$19.
  merging $macc model for $add$./spm.v:41$13 into $add$./spm.v:41$14.
  merging $macc model for $mul$./spm.v:40$6 into $add$./spm.v:41$14.
  merging $macc model for $mul$./spm.v:41$9 into $add$./spm.v:41$11.
  merging $macc model for $mul$./spm.v:41$10 into $add$./spm.v:41$11.
  creating $alu model for $macc $add$./spm.v:26$4.
  creating $alu model for $macc $add$./spm.v:25$3.
  creating $macc cell for $add$./spm.v:41$14: $auto$alumacc.cc:365:replace_macc$24
  creating $macc cell for $sub$./spm.v:43$16: $auto$alumacc.cc:365:replace_macc$25
  creating $macc cell for $add$./spm.v:41$11: $auto$alumacc.cc:365:replace_macc$26
  creating $macc cell for $mul$./spm.v:23$1: $auto$alumacc.cc:365:replace_macc$27
  creating $macc cell for $mul$./spm.v:24$2: $auto$alumacc.cc:365:replace_macc$28
  creating $macc cell for $add$./spm.v:43$19: $auto$alumacc.cc:365:replace_macc$29
  creating $alu cell for $add$./spm.v:25$3: $auto$alumacc.cc:485:replace_alu$30
  creating $alu cell for $add$./spm.v:26$4: $auto$alumacc.cc:485:replace_alu$33
  created 2 $alu and 6 $macc cells.

29. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module spm that may be considered for resource sharing.
  Analyzing resource sharing options for $mul$./spm.v:41$9 ($mul):
    Found cell that is never activated: $mul$./spm.v:41$9
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$./spm.v:41$10 ($mul):
    Found cell that is never activated: $mul$./spm.v:41$10
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $mul$./spm.v:40$6 ($mul):
    Found cell that is never activated: $mul$./spm.v:40$6
    Cell is never active. Sharing is pointless, we simply remove it.
Removing 3 cells in module spm:
  Removing cell $mul$./spm.v:40$6 ($mul).
  Removing cell $mul$./spm.v:41$10 ($mul).
  Removing cell $mul$./spm.v:41$9 ($mul).

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spm.
Performed a total of 0 changes.

30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

30.6. Executing OPT_DFF pass (perform DFF optimizations).

30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..
Removed 3 unused cells and 5 unused wires.
<suppressed ~5 debug messages>

30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

30.9. Rerunning OPT passes. (Maybe there is more to do..)

30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spm.
Performed a total of 0 changes.

30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

30.13. Executing OPT_DFF pass (perform DFF optimizations).

30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

30.16. Finished OPT passes. (There is nothing left to do.)

31. Executing MEMORY pass.

31.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

31.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

31.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

31.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

31.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

31.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

31.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

31.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

31.10. Executing MEMORY_COLLECT pass (generating $mem cells).

32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

33.3. Executing OPT_DFF pass (perform DFF optimizations).

33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

33.5. Finished fast OPT passes.

34. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spm.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

35.6. Executing OPT_SHARE pass.

35.7. Executing OPT_DFF pass (perform DFF optimizations).

35.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

35.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

35.10. Finished OPT passes. (There is nothing left to do.)

36. Executing TECHMAP pass (map to technology primitives).

36.1. Executing Verilog-2005 frontend: /nix/store/9gvg4b4jw2xg04h7sq5zgxymrm4ja31v-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/9gvg4b4jw2xg04h7sq5zgxymrm4ja31v-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

36.2. Continuing TECHMAP pass.
Using extmapper maccmap for cells of type $macc.
  add \iX [31:0] * \iY [31:0] (32x32 bits, unsigned)
  add { \p 64'0000000000000000000000000000000000000000000000000000000000000000 } (128 bits, unsigned)
  add \q (64 bits, unsigned)
  add { $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [95] $auto$wreduce.cc:461:run$23 [65:0] 32'00000000000000000000000000000000 } (128 bits, unsigned)
Using template $paramod$857150d3a9b7fb38b73bbaa31ff652415e553f98\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
  add \iX [63:32] * \iY [63:32] (32x32 bits, unsigned)
  add \t (66 bits, unsigned)
  sub \p (64 bits, unsigned)
  sub \q (64 bits, unsigned)
  packed 2 (1) bits / 1 words into adder tree
  add \s [31:0] * \r [32] (32x1 bits, unsigned)
  add \r [31:0] * \s [32] (32x1 bits, unsigned)
  add { $and$./spm.v:41$7_Y 64'0000000000000000000000000000000000000000000000000000000000000000 } (65 bits, unsigned)
  add \r [31:0] * \s [31:0] (32x32 bits, unsigned)
  add { $add$./spm.v:41$11_Y 32'00000000000000000000000000000000 } (66 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000000 for cells of type $fa.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000010 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000001 for cells of type $fa.
Using template $paramod$dbef6e48cd28208af1b77a9bd7dfc80580f16131\_90_alu for cells of type $alu.
Using template $paramod$7771edcff16823dc6718501da45b2d48ec8690bf\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000011 for cells of type $fa.
Using template $paramod$3566b3358bac682276fdbdbfc70170b333b0bfc3\_90_alu for cells of type $alu.
Using template $paramod$7e7bdf4b0adff8e15b2cb24084cd1b911e7a73b3\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000010000000 for cells of type $lcu.
No more expansions possible.
<suppressed ~4255 debug messages>

37. Executing OPT pass (performing simple optimizations).

37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.
<suppressed ~19171 debug messages>

37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

37.3. Executing OPT_DFF pass (perform DFF optimizations).

37.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..
Removed 501 unused cells and 1422 unused wires.
<suppressed ~502 debug messages>

37.5. Finished fast OPT passes.

38. Executing ABC pass (technology mapping using ABC).

38.1. Extracting gate netlist of module `\spm' to `<abc-temp-dir>/input.blif'..
Extracted 21548 gates and 21676 wires to a netlist network with 128 inputs and 128 outputs.

38.1.1. Executing ABC.
Running ABC command: "/nix/store/cvdwg68g71ibc2nfi1ybqzl637ads9y8-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

38.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:     2166
ABC RESULTS:               NOT cells:      575
ABC RESULTS:              NAND cells:      937
ABC RESULTS:              XNOR cells:     2371
ABC RESULTS:                OR cells:     2586
ABC RESULTS:             ORNOT cells:      319
ABC RESULTS:               NOR cells:     2127
ABC RESULTS:            ANDNOT cells:     6285
ABC RESULTS:               XOR cells:     4622
ABC RESULTS:        internal signals:    21420
ABC RESULTS:           input signals:      128
ABC RESULTS:          output signals:      128
Removing temp directory.

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..
Removed 0 unused cells and 2345 unused wires.
<suppressed ~9 debug messages>

39.5. Finished fast OPT passes.

40. Executing HIERARCHY pass (managing design hierarchy).

40.1. Analyzing design hierarchy..
Top module:  \spm

40.2. Analyzing design hierarchy..
Top module:  \spm
Removed 0 unused modules.

41. Printing statistics.

=== spm ===

   Number of wires:              21869
   Number of wire bits:          22372
   Number of public wires:           9
   Number of public wire bits:     512
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              21988
     $_ANDNOT_                    6285
     $_AND_                       2166
     $_NAND_                       937
     $_NOR_                       2127
     $_NOT_                        575
     $_ORNOT_                      319
     $_OR_                        2586
     $_XNOR_                      2371
     $_XOR_                       4622

42. Executing CHECK pass (checking for obvious problems).
Checking module spm...
Found and reported 0 problems.

43. Generating Graphviz representation of design.
Writing dot description to `/content/openlane_run/16-yosys-synthesis/post_techmap.dot'.
Dumping module spm to page 1.

44. Executing SHARE pass (SAT-based resource sharing).

45. Executing OPT pass (performing simple optimizations).

45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spm.
Performed a total of 0 changes.

45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spm'.
Removed a total of 0 cells.

45.6. Executing OPT_DFF pass (perform DFF optimizations).

45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..

45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spm.

45.9. Finished OPT passes. (There is nothing left to do.)

46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..
Removed 0 unused cells and 6 unused wires.
<suppressed ~6 debug messages>
{
   "creator": "Yosys 0.34 (git sha1 4a1b5599258, clang++ 11.1.0 -fPIC -Os)",
   "invocation": "stat -json ",
   "modules": {
      "\\spm": {
         "num_wires":         21863,
         "num_wire_bits":     22116,
         "num_pub_wires":     3,
         "num_pub_wire_bits": 256,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         21988,
         "num_cells_by_type": {
            "$_ANDNOT_": 6285,
            "$_AND_": 2166,
            "$_NAND_": 937,
            "$_NOR_": 2127,
            "$_NOT_": 575,
            "$_ORNOT_": 319,
            "$_OR_": 2586,
            "$_XNOR_": 2371,
            "$_XOR_": 4622
         }
      }
   },
      "design": {
         "num_wires":         21863,
         "num_wire_bits":     22116,
         "num_pub_wires":     3,
         "num_pub_wire_bits": 256,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         21988,
         "num_cells_by_type": {
            "$_ANDNOT_": 6285,
            "$_AND_": 2166,
            "$_NAND_": 937,
            "$_NOR_": 2127,
            "$_NOT_": 575,
            "$_ORNOT_": 319,
            "$_OR_": 2586,
            "$_XNOR_": 2371,
            "$_XOR_": 4622
         }
      }
}

[INFO] Applying latch mapping from '/root/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v'â¦

47. Executing TECHMAP pass (map to technology primitives).

47.1. Executing Verilog-2005 frontend: /root/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/root/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

47.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

49. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

49.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\spm':
{
   "creator": "Yosys 0.34 (git sha1 4a1b5599258, clang++ 11.1.0 -fPIC -Os)",
   "invocation": "stat -json ",
   "modules": {
      "\\spm": {
         "num_wires":         21863,
         "num_wire_bits":     22116,
         "num_pub_wires":     3,
         "num_pub_wire_bits": 256,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         21988,
         "num_cells_by_type": {
            "$_ANDNOT_": 6285,
            "$_AND_": 2166,
            "$_NAND_": 937,
            "$_NOR_": 2127,
            "$_NOT_": 575,
            "$_ORNOT_": 319,
            "$_OR_": 2586,
            "$_XNOR_": 2371,
            "$_XOR_": 4622
         }
      }
   },
      "design": {
         "num_wires":         21863,
         "num_wire_bits":     22116,
         "num_pub_wires":     3,
         "num_pub_wire_bits": 256,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         21988,
         "num_cells_by_type": {
            "$_ANDNOT_": 6285,
            "$_AND_": 2166,
            "$_NAND_": 937,
            "$_NOR_": 2127,
            "$_NOT_": 575,
            "$_ORNOT_": 319,
            "$_OR_": 2586,
            "$_XNOR_": 2371,
            "$_XOR_": 4622
         }
      }
}

[INFO] USING STRATEGY AREA 0

50. Executing ABC pass (technology mapping using ABC).

50.1. Extracting gate netlist of module `\spm' to `/tmp/yosys-abc-SEMUUy/input.blif'..
Extracted 21988 gates and 22116 wires to a netlist network with 128 inputs and 128 outputs.

50.1.1. Executing ABC.
Running ABC command: "/nix/store/cvdwg68g71ibc2nfi1ybqzl637ads9y8-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-SEMUUy/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-SEMUUy/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-SEMUUy/input.blif 
ABC: + read_lib -w /content/openlane_run/tmp/10d8473b521f44c9ab82449df7a4e1d6.lib 
ABC: Parsing finished successfully.  Parsing time =     0.13 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/content/openlane_run/tmp/10d8473b521f44c9ab82449df7a4e1d6.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.21 sec
ABC: Memory =    9.54 MB. Time =     0.21 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /content/openlane_run/16-yosys-synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2/Y".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /content/openlane_run/16-yosys-synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 10000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: Cannot find the default PI driving cell (sky130_fd_sc_hd__inv_2/Y) in the library.
ABC: + upsize -D 10000 
ABC: Cannot find the default PI driving cell (sky130_fd_sc_hd__inv_2/Y) in the library.
ABC: + dnsize -D 10000 
ABC: Cannot find the default PI driving cell (sky130_fd_sc_hd__inv_2/Y) in the library.
ABC: + stime -p 
ABC: Cannot find the default PI driving cell (sky130_fd_sc_hd__inv_2/Y) in the library.
ABC: WireLoad = "none"  Gates =  19058 (  3.3 %)   Cap =  9.9 ff (  1.1 %)   Area =   183739.97 ( 96.0 %)   Delay = 15543.76 ps  (  1.0 %)               
ABC: Path  0 --       4 : 0   67 pi                         A =   0.00  Df =   0.0   -0.0 ps  S =   0.0 ps  Cin =  0.0 ff  Cout = 205.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    3279 : 2    3 sky130_fd_sc_hd__xor2_2    A =  16.27  Df = 302.8 -102.1 ps  S = 348.2 ps  Cin =  8.6 ff  Cout =  26.0 ff  Cmax = 130.0 ff  G =  292  
ABC: Path  2 --    3478 : 4    3 sky130_fd_sc_hd__a31oi_4   A =  21.27  Df = 504.4  -26.3 ps  S = 262.4 ps  Cin =  8.5 ff  Cout =  26.0 ff  Cmax = 211.5 ff  G =  293  
ABC: Path  3 --    3525 : 3    3 sky130_fd_sc_hd__o21ai_4   A =  16.27  Df = 726.7 -102.2 ps  S = 237.0 ps  Cin =  8.8 ff  Cout =  26.6 ff  Cmax = 224.3 ff  G =  292  
ABC: Path  4 --    3889 : 3    4 sky130_fd_sc_hd__a21boi_4  A =  18.77  Df = 871.7  -26.5 ps  S = 218.0 ps  Cin =  6.8 ff  Cout =  24.0 ff  Cmax = 215.2 ff  G =  341  
ABC: Path  5 --    4375 : 5    5 sky130_fd_sc_hd__o221ai_2  A =  15.01  Df =1125.7  -62.4 ps  S = 337.9 ps  Cin =  4.5 ff  Cout =  21.1 ff  Cmax = 128.2 ff  G =  448  
ABC: Path  6 --    5866 : 5    4 sky130_fd_sc_hd__o2111a_2  A =  12.51  Df =1430.4  -36.8 ps  S =  95.6 ps  Cin =  2.4 ff  Cout =  13.4 ff  Cmax = 299.4 ff  G =  530  
ABC: Path  7 --    6953 : 3    4 sky130_fd_sc_hd__a21o_2    A =   8.76  Df =1623.3  -14.6 ps  S =  98.9 ps  Cin =  2.4 ff  Cout =  17.6 ff  Cmax = 309.5 ff  G =  722  
ABC: Path  8 --    8158 : 4    4 sky130_fd_sc_hd__or4b_4    A =  13.76  Df =2098.7 -251.3 ps  S =  99.5 ps  Cin =  2.2 ff  Cout =  12.1 ff  Cmax = 533.8 ff  G =  536  
ABC: Path  9 --    8603 : 3    4 sky130_fd_sc_hd__a21o_2    A =   8.76  Df =2344.8 -329.5 ps  S = 104.7 ps  Cin =  2.4 ff  Cout =  18.8 ff  Cmax = 309.5 ff  G =  767  
ABC: Path 10 --    8607 : 3    3 sky130_fd_sc_hd__and3_4    A =  11.26  Df =2525.0 -311.3 ps  S =  56.6 ps  Cin =  2.4 ff  Cout =   8.7 ff  Cmax = 532.8 ff  G =  340  
ABC: Path 11 --    8609 : 2    2 sky130_fd_sc_hd__or2_2     A =   6.26  Df =2828.4 -159.9 ps  S =  67.4 ps  Cin =  1.5 ff  Cout =   7.4 ff  Cmax = 299.4 ff  G =  480  
ABC: Path 12 --    8610 : 1   10 sky130_fd_sc_hd__buf_6     A =  11.26  Df =2967.6 -180.9 ps  S =  65.5 ps  Cin =  4.6 ff  Cout =  27.0 ff  Cmax = 785.5 ff  G =  551  
ABC: Path 13 --   10169 : 4    3 sky130_fd_sc_hd__o22a_2    A =  10.01  Df =3199.2 -136.8 ps  S =  65.4 ps  Cin =  2.4 ff  Cout =   9.7 ff  Cmax = 304.9 ff  G =  387  
ABC: Path 14 --   10172 : 3    1 sky130_fd_sc_hd__or3_4     A =  11.26  Df =3548.0 -349.9 ps  S =  58.2 ps  Cin =  2.4 ff  Cout =   1.5 ff  Cmax = 531.9 ff  G =   61  
ABC: Path 15 --   10173 : 2    2 sky130_fd_sc_hd__nor2b_2   A =   8.76  Df =3721.2 -165.8 ps  S = 153.4 ps  Cin =  2.9 ff  Cout =  11.8 ff  Cmax = 142.8 ff  G =  392  
ABC: Path 16 --   10491 : 3    2 sky130_fd_sc_hd__a21o_2    A =   8.76  Df =3917.5 -205.7 ps  S =  50.5 ps  Cin =  2.4 ff  Cout =   7.0 ff  Cmax = 309.5 ff  G =  285  
ABC: Path 17 --   10503 : 3    3 sky130_fd_sc_hd__a21o_2    A =   8.76  Df =4123.9 -276.4 ps  S =  68.7 ps  Cin =  2.4 ff  Cout =  11.2 ff  Cmax = 309.5 ff  G =  459  
ABC: Path 18 --   10505 : 3    2 sky130_fd_sc_hd__and3_2    A =   7.51  Df =4331.0  -99.4 ps  S =  65.8 ps  Cin =  1.5 ff  Cout =   7.6 ff  Cmax = 309.5 ff  G =  487  
ABC: Path 19 --   10508 : 3    4 sky130_fd_sc_hd__or3_4     A =  11.26  Df =4736.6 -292.8 ps  S =  82.5 ps  Cin =  2.4 ff  Cout =  13.9 ff  Cmax = 531.9 ff  G =  571  
ABC: Path 20 --   10519 : 4    2 sky130_fd_sc_hd__a22o_2    A =  10.01  Df =4995.2 -335.0 ps  S =  58.2 ps  Cin =  2.3 ff  Cout =   7.6 ff  Cmax = 301.2 ff  G =  308  
ABC: Path 21 --   10520 : 3    4 sky130_fd_sc_hd__and3_4    A =  11.26  Df =5187.8  -96.8 ps  S =  71.4 ps  Cin =  2.4 ff  Cout =  14.2 ff  Cmax = 532.8 ff  G =  558  
ABC: Path 22 --   10524 : 3    2 sky130_fd_sc_hd__o21ba_2   A =  10.01  Df =5391.9  -99.1 ps  S =  38.9 ps  Cin =  2.1 ff  Cout =   3.4 ff  Cmax = 264.6 ff  G =  155  
ABC: Path 23 --   10640 : 4    4 sky130_fd_sc_hd__nand4bb_2 A =  16.27  Df =5672.3  -27.5 ps  S = 144.2 ps  Cin =  3.0 ff  Cout =  13.9 ff  Cmax = 200.5 ff  G =  450  
ABC: Path 24 --   11017 : 4    4 sky130_fd_sc_hd__a211o_2   A =  10.01  Df =6073.4 -248.7 ps  S =  78.9 ps  Cin =  2.4 ff  Cout =  13.9 ff  Cmax = 325.0 ff  G =  571  
ABC: Path 25 --   11020 : 4    2 sky130_fd_sc_hd__a211o_2   A =  10.01  Df =6387.6 -418.2 ps  S =  59.3 ps  Cin =  2.4 ff  Cout =   7.0 ff  Cmax = 325.0 ff  G =  285  
ABC: Path 26 --   11022 : 4    1 sky130_fd_sc_hd__a211o_2   A =  10.01  Df =6721.7 -355.9 ps  S =  53.0 ps  Cin =  2.4 ff  Cout =   4.6 ff  Cmax = 325.0 ff  G =  187  
ABC: Path 27 --   11023 : 2    3 sky130_fd_sc_hd__nand2_2   A =   6.26  Df =6827.6 -252.7 ps  S =  99.4 ps  Cin =  4.4 ff  Cout =  15.7 ff  Cmax = 295.7 ff  G =  341  
ABC: Path 28 --   11024 : 2    4 sky130_fd_sc_hd__xnor2_2   A =  16.27  Df =7010.8 -197.1 ps  S = 259.1 ps  Cin =  8.5 ff  Cout =  16.5 ff  Cmax = 121.8 ff  G =  186  
ABC: Path 29 --   12457 : 4    2 sky130_fd_sc_hd__or4_4     A =  11.26  Df =7570.3 -284.1 ps  S =  88.6 ps  Cin =  2.4 ff  Cout =   7.2 ff  Cmax = 534.7 ff  G =  284  
ABC: Path 30 --   12458 : 3    2 sky130_fd_sc_hd__a21o_2    A =   8.76  Df =7780.2 -378.3 ps  S =  50.3 ps  Cin =  2.4 ff  Cout =   7.1 ff  Cmax = 309.5 ff  G =  289  
ABC: Path 31 --   13702 : 5    4 sky130_fd_sc_hd__a2111o_2  A =  12.51  Df =8275.1 -713.2 ps  S =  88.9 ps  Cin =  2.4 ff  Cout =  12.1 ff  Cmax = 324.1 ff  G =  477  
ABC: Path 32 --   14945 : 5    3 sky130_fd_sc_hd__a2111o_2  A =  12.51  Df =8773.1-1056.9 ps  S =  80.1 ps  Cin =  2.4 ff  Cout =   8.7 ff  Cmax = 324.1 ff  G =  348  
ABC: Path 33 --   16306 : 5    4 sky130_fd_sc_hd__a2111o_2  A =  12.51  Df =9234.2-1015.7 ps  S =  89.3 ps  Cin =  2.4 ff  Cout =  11.9 ff  Cmax = 324.1 ff  G =  476  
ABC: Path 34 --   16676 : 3    2 sky130_fd_sc_hd__a21o_2    A =   8.76  Df =9446.6 -734.5 ps  S =  49.8 ps  Cin =  2.4 ff  Cout =   7.0 ff  Cmax = 309.5 ff  G =  288  
ABC: Path 35 --   16796 : 3    2 sky130_fd_sc_hd__a21o_2    A =   8.76  Df =9648.3 -801.9 ps  S =  61.7 ps  Cin =  2.4 ff  Cout =   9.6 ff  Cmax = 309.5 ff  G =  393  
ABC: Path 36 --   16912 : 3    2 sky130_fd_sc_hd__a21o_4    A =  15.01  Df =9865.6 -895.9 ps  S =  42.7 ps  Cin =  4.5 ff  Cout =   9.6 ff  Cmax = 568.6 ff  G =  204  
ABC: Path 37 --   17005 : 3    3 sky130_fd_sc_hd__a21o_4    A =  15.01  Df =10081.3 -219.3 ps  S =  48.5 ps  Cin =  4.5 ff  Cout =  11.4 ff  Cmax = 568.6 ff  G =  239  
ABC: Path 38 --   17007 : 3    2 sky130_fd_sc_hd__a21o_4    A =  15.01  Df =10291.0 -197.5 ps  S =  39.7 ps  Cin =  4.5 ff  Cout =   7.6 ff  Cmax = 568.6 ff  G =  159  
ABC: Path 39 --   17011 : 3    4 sky130_fd_sc_hd__and3_4    A =  11.26  Df =10469.7 -119.9 ps  S =  60.4 ps  Cin =  2.4 ff  Cout =  10.1 ff  Cmax = 532.8 ff  G =  392  
ABC: Path 40 --   17225 : 4    2 sky130_fd_sc_hd__or4_4     A =  11.26  Df =10878.1 -247.3 ps  S =  83.9 ps  Cin =  2.4 ff  Cout =   5.1 ff  Cmax = 534.7 ff  G =  201  
ABC: Path 41 --   17227 : 4    2 sky130_fd_sc_hd__or4b_4    A =  13.76  Df =11361.7 -623.4 ps  S =  81.9 ps  Cin =  2.2 ff  Cout =   3.9 ff  Cmax = 533.8 ff  G =  173  
ABC: Path 42 --   17624 : 4    2 sky130_fd_sc_hd__a31o_2    A =   8.76  Df =11594.6 -561.1 ps  S =  77.7 ps  Cin =  2.4 ff  Cout =  10.4 ff  Cmax = 271.9 ff  G =  425  
ABC: Path 43 --   17984 : 3    4 sky130_fd_sc_hd__a21oi_4   A =  16.27  Df =11785.4 -448.3 ps  S = 192.9 ps  Cin =  8.8 ff  Cout =  20.4 ff  Cmax = 221.6 ff  G =  222  
ABC: Path 44 --   18571 : 4    4 sky130_fd_sc_hd__a31o_4    A =  17.52  Df =11992.2 -133.8 ps  S =  77.8 ps  Cin =  4.6 ff  Cout =  18.4 ff  Cmax = 499.0 ff  G =  384  
ABC: Path 45 --   18937 : 3    3 sky130_fd_sc_hd__and3_4    A =  11.26  Df =12205.8 -160.8 ps  S =  78.4 ps  Cin =  2.4 ff  Cout =  16.7 ff  Cmax = 532.8 ff  G =  657  
ABC: Path 46 --   19012 : 5    4 sky130_fd_sc_hd__o2111ai_4 A =  26.28  Df =12350.5  -83.4 ps  S = 205.4 ps  Cin =  8.5 ff  Cout =  11.7 ff  Cmax = 215.2 ff  G =  135  
ABC: Path 47 --   19106 : 3    3 sky130_fd_sc_hd__a21o_2    A =   8.76  Df =12589.6 -105.2 ps  S =  67.7 ps  Cin =  2.4 ff  Cout =  10.7 ff  Cmax = 309.5 ff  G =  440  
ABC: Path 48 --   19133 : 3    3 sky130_fd_sc_hd__a21o_4    A =  15.01  Df =12802.2 -187.2 ps  S =  53.0 ps  Cin =  4.5 ff  Cout =  13.8 ff  Cmax = 568.6 ff  G =  292  
ABC: Path 49 --   19137 : 3    2 sky130_fd_sc_hd__a21o_2    A =   8.76  Df =13009.1 -275.5 ps  S =  37.2 ps  Cin =  2.4 ff  Cout =   4.1 ff  Cmax = 309.5 ff  G =  165  
ABC: Path 50 --   19138 : 3    3 sky130_fd_sc_hd__and3b_2   A =  10.01  Df =13222.9   -0.5 ps  S =  67.5 ps  Cin =  1.5 ff  Cout =   7.8 ff  Cmax = 309.5 ff  G =  489  
ABC: Path 51 --   19140 : 2    3 sky130_fd_sc_hd__or2b_4    A =  11.26  Df =13487.6  -48.7 ps  S =  59.9 ps  Cin =  2.0 ff  Cout =  14.1 ff  Cmax = 515.5 ff  G =  664  
ABC: Path 52 --   19182 : 3    2 sky130_fd_sc_hd__or3_4     A =  11.26  Df =13870.1 -316.6 ps  S =  65.5 ps  Cin =  2.4 ff  Cout =   5.0 ff  Cmax = 531.9 ff  G =  198  
ABC: Path 53 --   19228 : 3    2 sky130_fd_sc_hd__or3_4     A =  11.26  Df =14236.7 -176.1 ps  S =  66.1 ps  Cin =  2.4 ff  Cout =   4.9 ff  Cmax = 531.9 ff  G =  202  
ABC: Path 54 --   19274 : 5    2 sky130_fd_sc_hd__a311o_2   A =  11.26  Df =14582.1 -342.0 ps  S =  76.6 ps  Cin =  2.3 ff  Cout =  10.5 ff  Cmax = 298.5 ff  G =  440  
ABC: Path 55 --   19278 : 3    4 sky130_fd_sc_hd__a21oi_4   A =  16.27  Df =14781.3 -467.9 ps  S = 193.5 ps  Cin =  8.8 ff  Cout =  20.5 ff  Cmax = 221.6 ff  G =  220  
ABC: Path 56 --   19300 : 5    3 sky130_fd_sc_hd__a221oi_4  A =  26.28  Df =14896.8 -228.6 ps  S = 334.4 ps  Cin =  8.6 ff  Cout =  20.2 ff  Cmax = 166.6 ff  G =  226  
ABC: Path 57 --   19308 : 5    2 sky130_fd_sc_hd__o221ai_4  A =  26.28  Df =15111.4 -262.3 ps  S = 212.9 ps  Cin =  8.6 ff  Cout =  13.5 ff  Cmax = 216.1 ff  G =  150  
ABC: Path 58 --   19311 : 3    1 sky130_fd_sc_hd__a21oi_2   A =   8.76  Df =15237.5 -122.9 ps  S = 236.4 ps  Cin =  4.6 ff  Cout =  17.5 ff  Cmax = 128.2 ff  G =  367  
ABC: Path 59 --   19313 : 2    1 sky130_fd_sc_hd__xnor2_4   A =  27.53  Df =15543.8 -161.1 ps  S = 298.8 ps  Cin = 16.3 ff  Cout =  33.4 ff  Cmax = 211.5 ff  G =  204  
ABC: Start-point = pi3 (\iY [1]).  End-point = po126 (\oO [127]).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  128/  128  lat =    0  nd = 19058  edge =  49511  area =183780.83  delay =64.00  lev = 64
ABC: + write_blif /tmp/yosys-abc-SEMUUy/output.blif 

50.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__xor2_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21boi_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4bb_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a311oi_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__bufbuf_8 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22o_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a211oi_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3b_4 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a211o_4 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__buf_4 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nor2_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand4bb_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__buf_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__nand2_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o41a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:       21
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a41oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__bufinv_8 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__or4_4 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__or4b_4 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:       88
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__o311ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31o_4 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:      192
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:      607
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      217
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:      236
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:      228
ABC RESULTS:   sky130_fd_sc_hd__and2_4 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:      580
ABC RESULTS:   sky130_fd_sc_hd__nor2b_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:      233
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:      564
ABC RESULTS:   sky130_fd_sc_hd__a21bo_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       67
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:       54
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:       56
ABC RESULTS:   sky130_fd_sc_hd__o31ai_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       57
ABC RESULTS:   sky130_fd_sc_hd__a21o_4 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand3_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__or2b_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:      200
ABC RESULTS:   sky130_fd_sc_hd__buf_6 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__buf_12 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:       48
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_8 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and4b_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nand4_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3_4 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:      464
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and3_4 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      259
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:      472
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:      284
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:       67
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:      135
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:      174
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:      497
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:      560
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__a21oi_4 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:      709
ABC RESULTS:   sky130_fd_sc_hd__or2_4 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       54
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      315
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:      737
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:      747
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:      695
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:      542
ABC RESULTS:   sky130_fd_sc_hd__a221oi_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:      396
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:     2030
ABC RESULTS:   sky130_fd_sc_hd__o221ai_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:      685
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:     1982
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:      794
ABC RESULTS:   sky130_fd_sc_hd__xnor2_4 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:     2494
ABC RESULTS:        internal signals:    21860
ABC RESULTS:           input signals:      128
ABC RESULTS:          output signals:      128
Removing temp directory.

51. Executing SETUNDEF pass (replace undef values with defined constants).

52. Executing HILOMAP pass (mapping to constant drivers).
Warning: Selection "sky130_fd_sc_hd__conb_1" did not match any module.
Warning: Selection "LO" did not match any object.

53. Executing SPLITNETS pass (splitting up multi-bit signals).

54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spm..
Removed 0 unused cells and 22116 unused wires.
<suppressed ~1 debug messages>

55. Executing INSBUF pass (insert buffer cells for connected wires).

56. Executing CHECK pass (checking for obvious problems).
Checking module spm...
Found and reported 0 problems.
{
   "creator": "Yosys 0.34 (git sha1 4a1b5599258, clang++ 11.1.0 -fPIC -Os)",
   "invocation": "stat -json ",
   "modules": {
      "\\spm": {
         "num_wires":         18933,
         "num_wire_bits":     19186,
         "num_pub_wires":     3,
         "num_pub_wire_bits": 256,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         19058,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a2111o_2": 12,
            "sky130_fd_sc_hd__a2111oi_2": 1,
            "sky130_fd_sc_hd__a211o_2": 228,
            "sky130_fd_sc_hd__a211o_4": 4,
            "sky130_fd_sc_hd__a211oi_2": 236,
            "sky130_fd_sc_hd__a211oi_4": 1,
            "sky130_fd_sc_hd__a21bo_2": 174,
            "sky130_fd_sc_hd__a21bo_4": 2,
            "sky130_fd_sc_hd__a21boi_2": 56,
            "sky130_fd_sc_hd__a21boi_4": 1,
            "sky130_fd_sc_hd__a21o_2": 737,
            "sky130_fd_sc_hd__a21o_4": 11,
            "sky130_fd_sc_hd__a21oi_2": 794,
            "sky130_fd_sc_hd__a21oi_4": 5,
            "sky130_fd_sc_hd__a221o_2": 5,
            "sky130_fd_sc_hd__a221oi_2": 1,
            "sky130_fd_sc_hd__a221oi_4": 1,
            "sky130_fd_sc_hd__a22o_2": 217,
            "sky130_fd_sc_hd__a22o_4": 1,
            "sky130_fd_sc_hd__a22oi_2": 580,
            "sky130_fd_sc_hd__a2bb2o_2": 67,
            "sky130_fd_sc_hd__a2bb2o_4": 1,
            "sky130_fd_sc_hd__a2bb2oi_2": 4,
            "sky130_fd_sc_hd__a311o_2": 14,
            "sky130_fd_sc_hd__a311oi_2": 6,
            "sky130_fd_sc_hd__a311oi_4": 1,
            "sky130_fd_sc_hd__a31o_2": 200,
            "sky130_fd_sc_hd__a31o_4": 3,
            "sky130_fd_sc_hd__a31oi_2": 18,
            "sky130_fd_sc_hd__a31oi_4": 1,
            "sky130_fd_sc_hd__a32o_2": 15,
            "sky130_fd_sc_hd__a32oi_2": 7,
            "sky130_fd_sc_hd__a41o_2": 2,
            "sky130_fd_sc_hd__a41oi_2": 1,
            "sky130_fd_sc_hd__and2_2": 695,
            "sky130_fd_sc_hd__and2_4": 4,
            "sky130_fd_sc_hd__and2b_2": 542,
            "sky130_fd_sc_hd__and3_2": 709,
            "sky130_fd_sc_hd__and3_4": 16,
            "sky130_fd_sc_hd__and3b_2": 29,
            "sky130_fd_sc_hd__and4_2": 607,
            "sky130_fd_sc_hd__and4_4": 2,
            "sky130_fd_sc_hd__and4b_2": 8,
            "sky130_fd_sc_hd__and4b_4": 1,
            "sky130_fd_sc_hd__and4bb_2": 54,
            "sky130_fd_sc_hd__buf_1": 259,
            "sky130_fd_sc_hd__buf_12": 1,
            "sky130_fd_sc_hd__buf_2": 17,
            "sky130_fd_sc_hd__buf_4": 8,
            "sky130_fd_sc_hd__buf_6": 17,
            "sky130_fd_sc_hd__buf_8": 5,
            "sky130_fd_sc_hd__bufbuf_8": 1,
            "sky130_fd_sc_hd__bufinv_8": 3,
            "sky130_fd_sc_hd__inv_2": 315,
            "sky130_fd_sc_hd__mux2_2": 2,
            "sky130_fd_sc_hd__nand2_2": 2030,
            "sky130_fd_sc_hd__nand2_4": 2,
            "sky130_fd_sc_hd__nand2b_2": 13,
            "sky130_fd_sc_hd__nand3_2": 464,
            "sky130_fd_sc_hd__nand3_4": 1,
            "sky130_fd_sc_hd__nand3b_2": 9,
            "sky130_fd_sc_hd__nand4_2": 64,
            "sky130_fd_sc_hd__nand4_4": 1,
            "sky130_fd_sc_hd__nand4bb_2": 3,
            "sky130_fd_sc_hd__nor2_2": 1982,
            "sky130_fd_sc_hd__nor2_4": 2,
            "sky130_fd_sc_hd__nor2b_2": 10,
            "sky130_fd_sc_hd__nor3_2": 233,
            "sky130_fd_sc_hd__nor3b_2": 16,
            "sky130_fd_sc_hd__nor4_2": 21,
            "sky130_fd_sc_hd__nor4b_2": 1,
            "sky130_fd_sc_hd__nor4bb_2": 1,
            "sky130_fd_sc_hd__o2111a_2": 3,
            "sky130_fd_sc_hd__o2111ai_4": 1,
            "sky130_fd_sc_hd__o211a_2": 284,
            "sky130_fd_sc_hd__o211ai_2": 192,
            "sky130_fd_sc_hd__o21a_2": 396,
            "sky130_fd_sc_hd__o21ai_2": 472,
            "sky130_fd_sc_hd__o21ai_4": 1,
            "sky130_fd_sc_hd__o21ba_2": 560,
            "sky130_fd_sc_hd__o21bai_2": 67,
            "sky130_fd_sc_hd__o221a_2": 5,
            "sky130_fd_sc_hd__o221ai_2": 4,
            "sky130_fd_sc_hd__o221ai_4": 1,
            "sky130_fd_sc_hd__o22a_2": 135,
            "sky130_fd_sc_hd__o22ai_2": 9,
            "sky130_fd_sc_hd__o2bb2a_2": 54,
            "sky130_fd_sc_hd__o2bb2ai_2": 3,
            "sky130_fd_sc_hd__o311a_2": 9,
            "sky130_fd_sc_hd__o311ai_2": 2,
            "sky130_fd_sc_hd__o31a_2": 48,
            "sky130_fd_sc_hd__o31ai_2": 13,
            "sky130_fd_sc_hd__o31ai_4": 1,
            "sky130_fd_sc_hd__o32a_2": 5,
            "sky130_fd_sc_hd__o32ai_2": 2,
            "sky130_fd_sc_hd__o41a_2": 2,
            "sky130_fd_sc_hd__or2_2": 747,
            "sky130_fd_sc_hd__or2_4": 12,
            "sky130_fd_sc_hd__or2b_2": 564,
            "sky130_fd_sc_hd__or2b_4": 1,
            "sky130_fd_sc_hd__or3_2": 497,
            "sky130_fd_sc_hd__or3_4": 23,
            "sky130_fd_sc_hd__or3b_2": 88,
            "sky130_fd_sc_hd__or3b_4": 4,
            "sky130_fd_sc_hd__or4_2": 57,
            "sky130_fd_sc_hd__or4_4": 14,
            "sky130_fd_sc_hd__or4b_2": 25,
            "sky130_fd_sc_hd__or4b_4": 11,
            "sky130_fd_sc_hd__or4bb_2": 6,
            "sky130_fd_sc_hd__or4bb_4": 1,
            "sky130_fd_sc_hd__xnor2_2": 2494,
            "sky130_fd_sc_hd__xnor2_4": 4,
            "sky130_fd_sc_hd__xor2_2": 685,
            "sky130_fd_sc_hd__xor2_4": 1
         }
      }
   },
      "design": {
         "num_wires":         18933,
         "num_wire_bits":     19186,
         "num_pub_wires":     3,
         "num_pub_wire_bits": 256,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         19058,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a2111o_2": 12,
            "sky130_fd_sc_hd__a2111oi_2": 1,
            "sky130_fd_sc_hd__a211o_2": 228,
            "sky130_fd_sc_hd__a211o_4": 4,
            "sky130_fd_sc_hd__a211oi_2": 236,
            "sky130_fd_sc_hd__a211oi_4": 1,
            "sky130_fd_sc_hd__a21bo_2": 174,
            "sky130_fd_sc_hd__a21bo_4": 2,
            "sky130_fd_sc_hd__a21boi_2": 56,
            "sky130_fd_sc_hd__a21boi_4": 1,
            "sky130_fd_sc_hd__a21o_2": 737,
            "sky130_fd_sc_hd__a21o_4": 11,
            "sky130_fd_sc_hd__a21oi_2": 794,
            "sky130_fd_sc_hd__a21oi_4": 5,
            "sky130_fd_sc_hd__a221o_2": 5,
            "sky130_fd_sc_hd__a221oi_2": 1,
            "sky130_fd_sc_hd__a221oi_4": 1,
            "sky130_fd_sc_hd__a22o_2": 217,
            "sky130_fd_sc_hd__a22o_4": 1,
            "sky130_fd_sc_hd__a22oi_2": 580,
            "sky130_fd_sc_hd__a2bb2o_2": 67,
            "sky130_fd_sc_hd__a2bb2o_4": 1,
            "sky130_fd_sc_hd__a2bb2oi_2": 4,
            "sky130_fd_sc_hd__a311o_2": 14,
            "sky130_fd_sc_hd__a311oi_2": 6,
            "sky130_fd_sc_hd__a311oi_4": 1,
            "sky130_fd_sc_hd__a31o_2": 200,
            "sky130_fd_sc_hd__a31o_4": 3,
            "sky130_fd_sc_hd__a31oi_2": 18,
            "sky130_fd_sc_hd__a31oi_4": 1,
            "sky130_fd_sc_hd__a32o_2": 15,
            "sky130_fd_sc_hd__a32oi_2": 7,
            "sky130_fd_sc_hd__a41o_2": 2,
            "sky130_fd_sc_hd__a41oi_2": 1,
            "sky130_fd_sc_hd__and2_2": 695,
            "sky130_fd_sc_hd__and2_4": 4,
            "sky130_fd_sc_hd__and2b_2": 542,
            "sky130_fd_sc_hd__and3_2": 709,
            "sky130_fd_sc_hd__and3_4": 16,
            "sky130_fd_sc_hd__and3b_2": 29,
            "sky130_fd_sc_hd__and4_2": 607,
            "sky130_fd_sc_hd__and4_4": 2,
            "sky130_fd_sc_hd__and4b_2": 8,
            "sky130_fd_sc_hd__and4b_4": 1,
            "sky130_fd_sc_hd__and4bb_2": 54,
            "sky130_fd_sc_hd__buf_1": 259,
            "sky130_fd_sc_hd__buf_12": 1,
            "sky130_fd_sc_hd__buf_2": 17,
            "sky130_fd_sc_hd__buf_4": 8,
            "sky130_fd_sc_hd__buf_6": 17,
            "sky130_fd_sc_hd__buf_8": 5,
            "sky130_fd_sc_hd__bufbuf_8": 1,
            "sky130_fd_sc_hd__bufinv_8": 3,
            "sky130_fd_sc_hd__inv_2": 315,
            "sky130_fd_sc_hd__mux2_2": 2,
            "sky130_fd_sc_hd__nand2_2": 2030,
            "sky130_fd_sc_hd__nand2_4": 2,
            "sky130_fd_sc_hd__nand2b_2": 13,
            "sky130_fd_sc_hd__nand3_2": 464,
            "sky130_fd_sc_hd__nand3_4": 1,
            "sky130_fd_sc_hd__nand3b_2": 9,
            "sky130_fd_sc_hd__nand4_2": 64,
            "sky130_fd_sc_hd__nand4_4": 1,
            "sky130_fd_sc_hd__nand4bb_2": 3,
            "sky130_fd_sc_hd__nor2_2": 1982,
            "sky130_fd_sc_hd__nor2_4": 2,
            "sky130_fd_sc_hd__nor2b_2": 10,
            "sky130_fd_sc_hd__nor3_2": 233,
            "sky130_fd_sc_hd__nor3b_2": 16,
            "sky130_fd_sc_hd__nor4_2": 21,
            "sky130_fd_sc_hd__nor4b_2": 1,
            "sky130_fd_sc_hd__nor4bb_2": 1,
            "sky130_fd_sc_hd__o2111a_2": 3,
            "sky130_fd_sc_hd__o2111ai_4": 1,
            "sky130_fd_sc_hd__o211a_2": 284,
            "sky130_fd_sc_hd__o211ai_2": 192,
            "sky130_fd_sc_hd__o21a_2": 396,
            "sky130_fd_sc_hd__o21ai_2": 472,
            "sky130_fd_sc_hd__o21ai_4": 1,
            "sky130_fd_sc_hd__o21ba_2": 560,
            "sky130_fd_sc_hd__o21bai_2": 67,
            "sky130_fd_sc_hd__o221a_2": 5,
            "sky130_fd_sc_hd__o221ai_2": 4,
            "sky130_fd_sc_hd__o221ai_4": 1,
            "sky130_fd_sc_hd__o22a_2": 135,
            "sky130_fd_sc_hd__o22ai_2": 9,
            "sky130_fd_sc_hd__o2bb2a_2": 54,
            "sky130_fd_sc_hd__o2bb2ai_2": 3,
            "sky130_fd_sc_hd__o311a_2": 9,
            "sky130_fd_sc_hd__o311ai_2": 2,
            "sky130_fd_sc_hd__o31a_2": 48,
            "sky130_fd_sc_hd__o31ai_2": 13,
            "sky130_fd_sc_hd__o31ai_4": 1,
            "sky130_fd_sc_hd__o32a_2": 5,
            "sky130_fd_sc_hd__o32ai_2": 2,
            "sky130_fd_sc_hd__o41a_2": 2,
            "sky130_fd_sc_hd__or2_2": 747,
            "sky130_fd_sc_hd__or2_4": 12,
            "sky130_fd_sc_hd__or2b_2": 564,
            "sky130_fd_sc_hd__or2b_4": 1,
            "sky130_fd_sc_hd__or3_2": 497,
            "sky130_fd_sc_hd__or3_4": 23,
            "sky130_fd_sc_hd__or3b_2": 88,
            "sky130_fd_sc_hd__or3b_4": 4,
            "sky130_fd_sc_hd__or4_2": 57,
            "sky130_fd_sc_hd__or4_4": 14,
            "sky130_fd_sc_hd__or4b_2": 25,
            "sky130_fd_sc_hd__or4b_4": 11,
            "sky130_fd_sc_hd__or4bb_2": 6,
            "sky130_fd_sc_hd__or4bb_4": 1,
            "sky130_fd_sc_hd__xnor2_2": 2494,
            "sky130_fd_sc_hd__xnor2_4": 4,
            "sky130_fd_sc_hd__xor2_2": 685,
            "sky130_fd_sc_hd__xor2_4": 1
         }
      }
}

57. Executing Verilog backend.
Dumping module `\spm'.

58. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: c59fe4ed0d, CPU: user 13.99s system 0.36s, MEM: 132.77 MB peak
Yosys 0.34 (git sha1 4a1b5599258, clang++ 11.1.0 -fPIC -Os)
Time spent: 81% 2x abc (57 sec), 5% 28x opt_expr (3 sec), ...
